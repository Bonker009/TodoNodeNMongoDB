<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Task Details</title>

    <!-- Include Tailwind CSS -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css"
    />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap"
      rel="stylesheet"
    />
    <style>
      * {
        font-family: 'Roboto', sans-serif;
      }
    </style>
  </head>
  <body class="font-sans bg-gray-100">
    <div class="container mx-auto p-4">
      <h1 ed class="text-4xl font-bold mb-8">Task Details</h1>

      <div class="bg-white p-6 shadow-lg rounded-lg mb-8">
        <h2 class="text-xl font-bold mb-4 text-blue-600 uppercase text-center">
          <%= task.title %>
        </h2>
        <p class="text-gray-800 mb-4"><%= task.description %></p>
        <ul class="mb-4">
          <li class="flex items-center text-gray-600 mb-2">
            <svg class="w-4 h-4 mr-2" viewBox="0 0 24 24" fill="currentColor">
              <circle
                cx="12"
                cy="12"
                r="10"
                class="<%= task.completed === 'false' ? 'text-red-500' : 'text-green-500' %>"
              />
            </svg>
            <%= task.completed === 'false' ? 'Pending' : 'Completed' %>
          </li>
          <li class="flex items-center text-gray-600 mb-2">
            <svg class="w-4 h-4 mr-2" viewBox="0 0 24 24" fill="currentColor">
              <path
                fill-rule="evenodd"
                d="M3 4h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1zm0 2v12h18V6H3zm4 4h10a1 1 0 0 1 0 2H7a1 1 0 0 1 0-2zm0 4h10a1 1 0 1 1 0 2H7a1 1 0 0 1 0-2z"
                class="text-gray-500"
              />
            </svg>
            <%= new Date(task.dueDate).toLocaleDateString('en-US', { year:
            'numeric', month: 'long', day: 'numeric' }) %>
          </li>
          <li class="flex items-center text-gray-600 mb-2">
            <svg class="w-4 h-4 mr-2" viewBox="0 0 24 24" fill="currentColor">
              <!-- Assuming createdAt and updatedAt are in the same format as dueDate -->
              <path
                fill-rule="evenodd"
                d="M3 4h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1zm0 2v12h18V6H3zm4 4h10a1 1 0 0 1 0 2H7a1 1 0 0 1 0-2zm0 4h10a1 1 0 1 1 0 2H7a1 1 0 0 1 0-2z"
                class="text-gray-500"
              />
            </svg>
            Created: <%= new Date(task.createdAt).toLocaleDateString('en-US', {
            year: 'numeric', month: 'long', day: 'numeric' }) %>
          </li>
          <li class="flex items-center text-gray-600">
            <svg class="w-4 h-4 mr-2" viewBox="0 0 24 24" fill="currentColor">
              <!-- Assuming createdAt and updatedAt are in the same format as dueDate -->
              <path
                fill-rule="evenodd"
                d="M3 4h18a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1zm0 2v12h18V6H3zm4 4h10a1 1 0 0 1 0 2H7a1 1 0 0 1 0-2zm0 4h10a1 1 0 1 1 0 2H7a1 1 0 0 1 0-2z"
                class="text-gray-500"
              />
            </svg>
            Updated: <%= new Date(task.updatedAt).toLocaleDateString('en-US', {
            year: 'numeric', month: 'long', day: 'numeric' }) %>
          </li>
        </ul>

        <!-- Back button to navigate to the task list -->
        <a href="/tasks" class="text-blue-500">Back to Task List</a>
      </div>
      <div class="flex flex-row gap-10 mx-auto p-4 flex-wrap">
        <% if (latestTask && latestTask.length > 0) { %> <%
        latestTask.forEach((task, index) => { %>
        <div
          class="bg-white p-6 shadow-lg rounded-lg mb-8 w-64 draggable"
          draggable="true"
          id="<%= 'draggableItem' + index %>"
          ondragstart="drag(event)"
        >
          <h2
            class="text-xl font-bold mb-4 text-blue-600 uppercase text-center"
          >
            <a href="/tasks/show/<%= task._id %>"><%= task.title %></a>
          </h2>
          <p class="text-gray-800 mb-4"><%= task.description %></p>
          <ul class="mb-4">
            <!-- ... (your existing code for task details) ... -->
          </ul>
        </div>
        <% }); %> <% } else { %>
        <p class="text-gray-500">No tasks found</p>
        <% } %>
      </div>
    </div>

    <script>
      function drag(event) {
        event.dataTransfer.setData('text/plain', event.target.id);
      }

      document.addEventListener('DOMContentLoaded', function () {
        const draggableElements = document.querySelectorAll('.draggable');

        draggableElements.forEach((element) => {
          element.addEventListener('dragstart', handleDragStart);
          element.addEventListener('dragover', handleDragOver);
          element.addEventListener('drop', handleDrop);
        });

        function handleDragStart(event) {
          event.dataTransfer.setData('text/plain', event.target.id);
        }

        function handleDragOver(event) {
          event.preventDefault();
        }

        function handleDrop(event) {
          event.preventDefault();
          const draggedItemId = event.dataTransfer.getData('text/plain');
          const draggedElement = document.getElementById(draggedItemId);
          const dropTarget = event.target;

          // Swap the positions of the dragged element and the drop target
          if (draggedElement && dropTarget.classList.contains('draggable')) {
            const temp = document.createElement('div');
            dropTarget.parentNode.insertBefore(temp, dropTarget);
            draggedElement.parentNode.insertBefore(dropTarget, draggedElement);
            temp.parentNode.insertBefore(draggedElement, temp);
            temp.parentNode.removeChild(temp);
          }
        }
      });
    </script>
  </body>
</html>
